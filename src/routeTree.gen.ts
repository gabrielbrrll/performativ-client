/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedJournalsIndexImport } from './routes/_authenticated/journals/index'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedJournalsCreateImport } from './routes/_authenticated/journals/create'
import { Route as AuthenticatedJournalsIdImport } from './routes/_authenticated/journals/$id'

// Create Virtual Routes

const SignupLazyImport = createFileRoute('/signup')()
const LoginLazyImport = createFileRoute('/login')()

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedJournalsIndexRoute = AuthenticatedJournalsIndexImport.update(
  {
    id: '/journals/',
    path: '/journals/',
    getParentRoute: () => AuthenticatedRoute,
  } as any,
)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    id: '/dashboard/',
    path: '/dashboard/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedJournalsCreateRoute =
  AuthenticatedJournalsCreateImport.update({
    id: '/journals/create',
    path: '/journals/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedJournalsIdRoute = AuthenticatedJournalsIdImport.update({
  id: '/journals/$id',
  path: '/journals/$id',
  getParentRoute: () => AuthenticatedRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/journals/$id': {
      id: '/_authenticated/journals/$id'
      path: '/journals/$id'
      fullPath: '/journals/$id'
      preLoaderRoute: typeof AuthenticatedJournalsIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/journals/create': {
      id: '/_authenticated/journals/create'
      path: '/journals/create'
      fullPath: '/journals/create'
      preLoaderRoute: typeof AuthenticatedJournalsCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/journals/': {
      id: '/_authenticated/journals/'
      path: '/journals'
      fullPath: '/journals'
      preLoaderRoute: typeof AuthenticatedJournalsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedJournalsIdRoute: typeof AuthenticatedJournalsIdRoute
  AuthenticatedJournalsCreateRoute: typeof AuthenticatedJournalsCreateRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedJournalsIndexRoute: typeof AuthenticatedJournalsIndexRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedJournalsIdRoute: AuthenticatedJournalsIdRoute,
  AuthenticatedJournalsCreateRoute: AuthenticatedJournalsCreateRoute,
  AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  AuthenticatedJournalsIndexRoute: AuthenticatedJournalsIndexRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/journals/$id': typeof AuthenticatedJournalsIdRoute
  '/journals/create': typeof AuthenticatedJournalsCreateRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/journals': typeof AuthenticatedJournalsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/': typeof AuthenticatedIndexRoute
  '/journals/$id': typeof AuthenticatedJournalsIdRoute
  '/journals/create': typeof AuthenticatedJournalsCreateRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/journals': typeof AuthenticatedJournalsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/login': typeof LoginLazyRoute
  '/signup': typeof SignupLazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/journals/$id': typeof AuthenticatedJournalsIdRoute
  '/_authenticated/journals/create': typeof AuthenticatedJournalsCreateRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/journals/': typeof AuthenticatedJournalsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/signup'
    | '/'
    | '/journals/$id'
    | '/journals/create'
    | '/dashboard'
    | '/journals'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/signup'
    | '/'
    | '/journals/$id'
    | '/journals/create'
    | '/dashboard'
    | '/journals'
  id:
    | '__root__'
    | '/_authenticated'
    | '/login'
    | '/signup'
    | '/_authenticated/'
    | '/_authenticated/journals/$id'
    | '/_authenticated/journals/create'
    | '/_authenticated/dashboard/'
    | '/_authenticated/journals/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  LoginLazyRoute: typeof LoginLazyRoute
  SignupLazyRoute: typeof SignupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  LoginLazyRoute: LoginLazyRoute,
  SignupLazyRoute: SignupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/login",
        "/signup"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/journals/$id",
        "/_authenticated/journals/create",
        "/_authenticated/dashboard/",
        "/_authenticated/journals/"
      ]
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/signup": {
      "filePath": "signup.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/journals/$id": {
      "filePath": "_authenticated/journals/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/journals/create": {
      "filePath": "_authenticated/journals/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/journals/": {
      "filePath": "_authenticated/journals/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
